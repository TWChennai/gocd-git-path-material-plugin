plugins {
    id 'java'
    id 'jacoco'
    id 'com.github.ben-manes.versions' version '0.45.0'
}

apply from: "https://raw.githubusercontent.com/gocd/gocd-plugin-gradle-task-helpers/master/helper.gradle?_=${(int) (new Date().toInstant().epochSecond / 86400)}"

group 'com.thoughtworks.go'

sourceCompatibility = 11
targetCompatibility = 11

gocdPlugin {
    id = 'git-path'
    pluginVersion = '2.2.2'
    goCdVersion = '19.9.0'
    name = 'Git Path Material Plugin'
    description = 'Plugin that polls a Git repository and triggers pipelines based on sub-directory path matches'
    vendorName = 'Thoughtworks, Inc / GoCD contributors'
    vendorUrl = 'https://github.com/' + (System.getenv('GITHUB_USER') ?: 'TWChennai') + '/gocd-git-path-material-plugin'

    githubRepo {
        owner = System.getenv('GITHUB_USER') ?: 'TWChennai'
        repo = 'gocd-git-path-material-plugin'
        token = System.getenv('GITHUB_TOKEN') ?: 'bad-token'
    }

    pluginProject = project

    prerelease = !"No".equalsIgnoreCase(System.getenv('PRERELEASE'))
    assetsToRelease = [project.tasks.jar]
}

allprojects {
    version = gocdPlugin.fullVersion(project)
}

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    jacksonVersion = '2.14.2'
    junitVersion = '5.9.2'
    mockitoVersion = '5.1.1'
    gocdPluginVersion = '22.3.0'
}

dependencies {
    compileOnly "cd.go.plugin:go-plugin-api:${gocdPluginVersion}"

    implementation 'in.ashwanthkumar:git-cmd:2.0'
    constraints {
        // Control transitive dependency versions from git-cmd
        implementation 'org.eclipse.jgit:org.eclipse.jgit:6.4.0.202211300538-r'
        implementation 'joda-time:joda-time:2.12.2'
        implementation 'commons-io:commons-io:2.6'
    }

    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testCompileOnly "cd.go.plugin:go-plugin-api:${gocdPluginVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jar {
    from(configurations.runtimeClasspath) {
        into "lib/"
    }
}

task startGoCd(dependsOn: build, type: Exec) {
    dependsOn build
    environment("PLUGIN_VERSION", "$version")
    commandLine "docker-compose", "up", "-d"
}

task restartGoCd(dependsOn: build, type: Exec) {
    dependsOn build
    environment("PLUGIN_VERSION", "$version")
    commandLine "docker-compose", "restart"
}

task stopGoCd(type: Exec) {
    environment("PLUGIN_VERSION", "$version")
    commandLine "docker-compose", "stop"
}
